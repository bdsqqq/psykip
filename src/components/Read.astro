---
import type { Frontmatter } from "../pages/read/[translation]/[chapter].astro";

import { Icon } from "astro-icon";

const MDs = await Astro.glob<Frontmatter>("../data/**/index.md");
const frontmatters = MDs.map((MD) => MD.frontmatter);
---

<div
  id="read"
  class="flex flex-col lg:grid lg:grid-cols-[1fr,3fr] gap-16 h-full px-12 py-16"
>
  <h1 class="text-2xl">
    We compiled translations from diferent authors at diferent points of history
    alongisde the original Enchiridion to make sure you can read your favorite
    version of it.
  </h1>
  <ul
    class="flex flex-col transition-colors focus-within:text-zinc-400 hover:text-zinc-400 pointer-events-none divide-y divide-zinc-300 border-y border-zinc-300 h-min"
  >
    {
      frontmatters
        .sort((a, b) => (a.Date > b.Date ? 1 : -1))
        .map((frontmatter) => (
          <li>
            <a
              class="py-6 block transition-colors focus:text-zinc-900 hover:text-zinc-900  pointer-events-auto outline-none ring-zinc-500 focus-visible:ring-2  focus-within:z-10 relative"
              href={`/read/${frontmatter.Code}`}
            >
              <div class="flex gap-4 justify-between">
                <div class="inline-flex gap-4" id={`read-${frontmatter.Code}`}>
                  <span>{frontmatter.Translator}</span>
                  <span
                    data-read-cta={frontmatter.Code}
                    class="hidden items-center gap-4 text-zinc-500"
                  >
                    â€”
                    <div>
                      <span id={`${frontmatter.Code}-slot`} />
                      <Icon
                        class="inline h-[15px] w-[15px]"
                        name="radix-icons:bookmark"
                      />
                    </div>
                  </span>
                </div>
                <div class="inline-block w-[4ch] tabular-nums text-right">
                  {frontmatter.Date}
                </div>
              </div>
            </a>
          </li>
        ))
    }
  </ul>
</div>
<script client:load>
  const readCTAs = document.querySelectorAll("span[data-read-cta]");

  readCTAs.forEach((CTA) => {
    translation = CTA.attributes["data-read-cta"].value;
    const readUpTo = localStorage.getItem(translation);

    if (readUpTo) {
      const slot = document.getElementById(`${translation}-slot`);
      slot.innerText = readUpTo;
      CTA.title = `Read up to chapter ${readUpTo}`;
      CTA.classList.remove("hidden");
      CTA.classList.add("flex");
    }
  });
</script>
