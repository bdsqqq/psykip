---
import type { MarkdownInstance } from "astro";
import type { Frontmatter as ChapterFrontmatter } from "./[translation]/[chapter].astro";
import Base from "../../layouts/base.astro";
import codes from "../../data/codes";
import Chapter from "../../components/Chapter.astro";
import SourceFooter from "../../components/SourceFooter.astro";

export function getStaticPaths() {
  return codes.map((code) => ({
    params: {
      translation: code,
    },
  }));
}

const { translation } = Astro.params;

interface Frontmatter {
  Author: string;
  Title: string;
  Translator: string;
  Date: string;
  Source: {
    label: string;
    url: string;
  };
  Code: string;
}

const { frontmatter } = (await import(
  `../../data/${translation}/index.md`
)) as MarkdownInstance<Frontmatter>;

const chapters = new Array(53).fill(0).map((_, i) => i + 1);

const MDs = await Promise.all(
  chapters.map(
    async (chapter) =>
      (await import(
        `../../data/${translation}/chapters/${chapter}.md`
      )) as MarkdownInstance<ChapterFrontmatter>
  )
);
---

<Base
  title={`${frontmatter.Translator}'s translation â€” The manual, a compilation of the Enchiridion translations`}
  description={`Read ${frontmatter.Translator}'s Translation of the Enchiridion. We compiled translations from diferent authors at diferent points of history alongisde the original Enchiridion from Epictetus to make sure you can easily read and share your favorite version of it.`}
>
  <div class="flex flex-col gap-24 px-12 py-16">
    {
      MDs.map((MD, i) => (
        <div class="mx-auto">
          <Chapter
            translationCode={translation}
            chapterNumber={(i + 1).toString()}
            chapterHead={MD.frontmatter.Chapter}
            chapterTextContent={MD.rawContent()}
          >
            <MD.Content key={i} />
          </Chapter>
        </div>
      ))
    }

    <SourceFooter url={frontmatter.Source.url} label={frontmatter.Source.label}
    />
  </div>
</Base>
