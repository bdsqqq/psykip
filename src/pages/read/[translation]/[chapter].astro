---
import { getEntryBySlug } from "astro:content";
import Base from "../../../layouts/base.astro";
import Chapter from "../../../components/Chapter.astro";
import codes from "../../../data/codes";
import type {
  TranslationCode,
  Chapter as ChapterType,
} from "../../../data/codes";
import SourceFooter from "../../../components/SourceFooter.astro";
import { Icon } from "astro-icon";
import Nav from "../../../components/Nav.astro";

export function getStaticPaths() {
  return codes
    .map((code) => ({
      params: {
        translation: code,
      },
    }))
    .flatMap((path) => {
      let aux = [];
      // 53 is a magic number taken from the number of chapters the book has, so I'm pretty confident it will not change and break stuff
      for (let i = 1; i <= 53; i++) {
        aux.push({
          params: {
            ...path.params,
            chapter: i.toString(),
          },
        });
      }
      return aux;
    });
}

const { translation, chapter } = Astro.params as unknown as {
  translation: TranslationCode;
  chapter: ChapterType;
};

const entry = await getEntryBySlug("translations", `${translation}/${chapter}`);

if (!entry) {
  console.error(`No entry found for ${translation}/${chapter}`);
  return {
    status: 404,
  };
}

const { Content } = await entry.render();
---

<Base
  title={`Chapter ${chapter}, ${entry.data.Translator}'s translation â€” The manual, a compilation of the Enchiridion translations`}
  description={`Read the chapter ${chapter} of ${entry.data.Translator}'s Translation of the Enchiridion. We compiled translations from different authors at different points of history alongside the original Enchiridion from Epictetus to make sure you can easily read and share your favorite version of it.`}
>
  <Nav
    href={`/read/${translation}`}
    label={`Full ${entry.data.Translator} translation`}
  />
  <div class="flex flex-col px-12 py-16 justify-between min-h-screen gap-40">
    <div class="flex flex-col gap-20 mx-auto">
      <Chapter
        translationCode={translation}
        chapterNumber={entry.data.Chapter}
        chapterHead={entry.data.Chapter}
        chapterHeadId={entry.data.Chapter}
        chapterId={`${translation}-${chapter}`}
      >
        <Content />
      </Chapter>

      <div>
        <a
          class="flex gap-1 items-center p-2 -ml-2 w-max underline underline-offset-2 outline-none focus-visible:ring-2 ring-zinc-500 ring-offset-zinc-100 dark:ring-offset-zinc-900 ring-offset-2 group"
          rel="prefetch"
          href={`/read/${entry.data.Code}#${entry.data.Chapter}`}
          >Continue reading<Icon
            class="inline h-[15px] w-[15px] transition-transform transform translate-y-[1px] group-focus-visible:translate-x-1 group-hover:translate-x-1"
            name="radix-icons:arrow-right"
          />
        </a>
      </div>
    </div>

    <SourceFooter url={entry.data.Source.url} label={entry.data.Source.label} />
  </div>
</Base>
